namespace: "pulsar-dev"
#
# uncomment these for install:
#
#namespaceCreate: true
initialize: true


# made affinity preferred.
# Note: you need to also set this for each component or else the global value will be overwritten by the default.
affinity:
  anti_affinity: false
  type: requiredDuringSchedulingIgnoredDuringExecution





volumes:
  persistence: true
  # configure the components to use local persistent volume
  # the local provisioner should be installed prior to enable local persistent volume
  # We currently don't store data longterm in our pulsar. So we don't currently need local storage. However if
  # we do want the data to be persistent then we can enable it here.
  local_storage: false


components:
  # zookeeper
  zookeeper: true
  # bookkeeper
  bookkeeper: true
  # bookkeeper - autorecovery
  autorecovery: true
  # broker
  broker: true
  # functions
  functions: false # enabling this with tls is broken. Not sure what it does or if we will need it. TODO
  # proxy
  proxy: true
  # toolset
  toolset: true
  # pulsar manager
  pulsar_manager: false

images:
  proxy:
    repository: apachepulsar/pulsar-all
    # uses defaultPulsarImageTag when unspecified
    tag: 2.8.4
    pullPolicy: IfNotPresent

kube-prometheus-stack:
  enabled: true
  prometheus:
    enabled: true
  grafana:
    enabled: true
  prometheus-node-exporter:
    enabled: true
  alertmanager:
    enabled: false

zookeeper:
  replicaCount: 1
  affinity:
    anti_affinity: false

  volumes:
    persistence: true
    data:
      storageClassName: pulsar-storage

bookkeeper:
  replicaCount: 1
  affinity:
    anti_affinity: false
  volumes:
    persistence: true
    journal:
      storageClassName: pulsar-storage
    ledgers:
      storageClassName: pulsar-storage

broker:
  replicaCount: 1
  affinity:
    anti_affinity: false


proxy:
  replicaCount: 1
  affinity:
    anti_affinity: false



# enable TLS
tls:
  enabled: true
  proxy:
    enabled: true
  broker:
    enabled: true
  bookie:
    enabled: true
  zookeeper:
    enabled: true

# issue selfsigning certs
certs:
  internal_issuer:
    enabled: true
    type: selfsigning


auth:
  authentication:
    enabled: true
    provider: "jwt"
    jwt:
      # Enable JWT authentication
      # If the token is generated by a secret key, set the usingSecretKey as true.
      # If the token is generated by a private key, set the usingSecretKey as false.
      usingSecretKey: true
  authorization:
    enabled: true
  superUsers:
    # broker to broker communication
    broker: "broker-admin"
    # proxy to broker communication
    proxy: "proxy-admin"
    # pulsar-admin client to broker/proxy communication
    client: "admin"

# instructions for creating secret key and configuring client here: https://pulsar.apache.org/docs/2.10.x/security-jwt/#create-a-secret-key